"set background=dark
set hidden
colorscheme wombat256

" Setup Testing
let g:rspec_command = "Dispatch zeus rspec {spec}"

au BufRead,BufNewFile *.rabl setf ruby
au BufRead,BufNewFile *.thor setf ruby
au BufRead,BufNewFile Gemfile setf ruby
au BufRead,BufNewFile Gemfile.lock setf yaml
au BufRead,BufNewFile *.node setf javascript
au BufRead,BufNewFile *.handlebars,*.hbs,*.html.erb setf html

set foldmethod=indent
set foldnestmax=4       "deepest fold is 10 levels
set nofoldenable        "dont fold by default
set foldlevel=1         "this is just what i use

" Bubble single lines
nmap <C-Up> ddkP
nmap <C-Down> ddp
" Bubble multiple lines
vmap <C-Up> xkP`[V`]
vmap <C-Down> xp`[V`]

" General
nmap <leader>me :set mouse=a<CR>
nmap <leader>md :set mouse=<CR>
nmap <leader>l :set list!<CR>
nmap <leader>vb :tabedit $MYVIMRC.before<CR>
nmap <leader>va :tabedit $MYVIMRC.after<CR>
nmap <leader>gb :tabedit $MYGVIMRC.before<CR>
nmap <leader>ga :tabedit $MYGVIMRC.after<CR>
nmap <leader>n :NERDTreeToggle<CR>
nmap <leader>m :NERDTreeFind<CR>
nmap <leader>p :b#<CR>
nmap <Leader>j !python -m json.tool<CR>
nmap <Leader>q :q<cr>
nmap <Leader>, :ccl<cr>
nmap <Leader>. :tabnew ~/Dropbox/work/chargify/notes/project-notes.txt<cr>
nmap <Leader>/ :tabnew ~/Dropbox/personal/notes/project-notes.txt<cr>
" Rails
nmap <leader>gt :A<CR>
nmap <Leader>rs :Rschema<cr>
nmap <Leader>rss :Rschema 
vmap <Leader>e :Rextract
vmap <Leader>l Ilet(:<ESC>ea)<ESC>f=r{$a<SPACE>}<ESC>
" Ruby
nmap <Leader>bi :Dispatch! bundle install<cr>
" Tabs
nmap <Leader>tc :tabnew<cr>
nmap <Leader>tn :tabnext<cr>
nmap <Leader>tp :tabprevious<cr>
" Rspec.vim mappings
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>tt :call RunNearestSpec()<CR>
map <Leader>tl :call RunLastSpec()<CR>

"nmap <buffer> <C-E> <Plug>(xmpfilter-run)
"xmap <buffer> <C-E> <Plug>(xmpfilter-run)
"imap <buffer> <C-E> <Plug>(xmpfilter-run)

imap <C-l> <Space>=><Space>
nmap <C-l> i<Space># =><Space>

map <F1> <Esc>:Rtags<CR><CR>
map <F2> <Esc>:w<CR>
map <F3> <Esc>:sp<CR>
map <F4> <Esc>:vsp<CR>

map <C-r> <Esc>:R<CR>
map <C-t> <Esc>:A<CR>
map <C-s> <Esc>:w<CR>
map <C-q> <Esc>:x<CR>

nmap <silent> <A-Up> :wincmd k<CR>
nmap <silent> <A-Down> :wincmd j<CR>
nmap <silent> <A-Left> :wincmd h<CR>
nmap <silent> <A-Right> :wincmd l<CR>

vmap <C-x> :!pbcopy<CR>  
vmap <C-c> :w !pbcopy<CR><CR> 

" nmap <Space> <C-d> " Scroll down on space

let g:rbpt_colorpairs = [
    \ ['brown',       'RoyalBlue3'],
    \ ['Darkblue',    'SeaGreen3'],
    \ ['darkgray',    'DarkOrchid3'],
    \ ['darkgreen',   'firebrick3'],
    \ ['darkcyan',    'RoyalBlue3'],
    \ ['darkred',     'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['brown',       'firebrick3'],
    \ ['gray',        'RoyalBlue3'],
    \ ['black',       'SeaGreen3'],
    \ ['darkmagenta', 'DarkOrchid3'],
    \ ['Darkblue',    'firebrick3'],
    \ ['darkgreen',   'RoyalBlue3'],
    \ ['darkcyan',    'SeaGreen3'],
    \ ['darkred',     'DarkOrchid3'],
    \ ['red',         'firebrick3'],
    \ ]

"ruby
autocmd FileType ruby,eruby set omnifunc=rubycomplete#Complete
autocmd FileType ruby,eruby let g:rubycomplete_buffer_loading = 1
autocmd FileType ruby,eruby let g:rubycomplete_rails = 1
autocmd FileType ruby,eruby let g:rubycomplete_classes_in_global = 1
"improve autocomplete menu color
highlight Pmenu ctermbg=238 gui=bold

call pathogen#infect()
set listchars=tab:â–¸\

