set encoding=utf-8
set fillchars+=stl:\ ,stlnc:\
set laststatus=2

set wildignore+=*/tmp/*,*/source_maps/*,*.so,*.swp,*.zip,tags,.git/*,.DS_Store

"call janus#disable_plugin('syntastic')
"call janus#disable_plugin('nerdtree')
let g:loaded_netrw        = 1 " Disable netrw
let g:loaded_netrwPlugin  = 1 " Disable netrw

set nocursorcolumn
set nocursorline
syntax sync minlines=256

set shell=/bin/bash

set t_Co=256

let mapleader = ","

highlight NonText guifg=#4a4a59
highlight SpecialKey guifg=#4a4a59

function! <SID>CloseHiddenBuffers()
  let visible = {}
  for t in range(1, tabpagenr('$'))
    for b in tabpagebuflist(t)
      let visible[b] = 1
    endfor
  endfor
  for b in range(1, bufnr('$'))
    if bufexists(b) && !has_key(visible, b)
      execute 'bwipeout' b
    endif
  endfor
  execute 'bd'
endfun

function! <SID>StripTrailingWhitespaces()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    %s/\s\+$//e
    let @/=_s
    call cursor(l, c)
endfunction

function! <SID>StripEmptyLines()
    " Preparation: save last search, and cursor position.
    let _s=@/
    let l = line(".")
    let c = col(".")
    g/^$/d
    let @/=_s
    call cursor(l, c)
endfunction

" Search for the ... arguments separated with whitespace (if no '!'),
" or with non-word characters (if '!' added to command).
function! SearchMultiLine(bang, ...)
  if a:0 > 0
    let sep = (a:bang) ? '\_W\+' : '\_s\+'
    let @/ = join(a:000, sep)
  endif
endfunction
command! -bang -nargs=* -complete=tag S call SearchMultiLine(<bang>0, <f-args>)|normal! /<C-R>/<CR>


nnoremap <silent> <leader>s :call <SID>StripTrailingWhitespaces()<CR>
nnoremap <silent> <leader>e :call <SID>StripEmptyLines()<CR>
nnoremap <silent> <leader>q :call <SID>CloseHiddenBuffers()<CR>

autocmd! bufwritepost .vimrc.before source %
autocmd! bufwritepost .vimrc.after  source %
autocmd! bufwritepost .gvimrc.after source %

nmap <SPACE> <SPACE>:noh<CR>
